/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  TokenToTokenExchange,
  TokenToTokenExchangeInterface,
} from "../../contracts/TokenToTokenExchange";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenB",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountB",
        type: "uint256",
      },
    ],
    name: "addLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "inputAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "inputReserve",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "outputReserve",
        type: "uint256",
      },
    ],
    name: "getAmountOfTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getReserves",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_liquidity",
        type: "uint256",
      },
    ],
    name: "removeLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amountIn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_minAmountOut",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenA",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200290a3803806200290a833981810160405281019062000037919062000390565b818181600390816200004a91906200068b565b5080600490816200005c91906200068b565b505050600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614158015620000ca5750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b6200010c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200010390620007f9565b60405180910390fd5b83600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050506200081b565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001d982620001ac565b9050919050565b620001eb81620001cc565b8114620001f757600080fd5b50565b6000815190506200020b81620001e0565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b62000266826200021b565b810181811067ffffffffffffffff821117156200028857620002876200022c565b5b80604052505050565b60006200029d62000198565b9050620002ab82826200025b565b919050565b600067ffffffffffffffff821115620002ce57620002cd6200022c565b5b620002d9826200021b565b9050602081019050919050565b60005b8381101562000306578082015181840152602081019050620002e9565b60008484015250505050565b6000620003296200032384620002b0565b62000291565b90508281526020810184848401111562000348576200034762000216565b5b62000355848285620002e6565b509392505050565b600082601f83011262000375576200037462000211565b5b81516200038784826020860162000312565b91505092915050565b60008060008060808587031215620003ad57620003ac620001a2565b5b6000620003bd87828801620001fa565b9450506020620003d087828801620001fa565b935050604085015167ffffffffffffffff811115620003f457620003f3620001a7565b5b62000402878288016200035d565b925050606085015167ffffffffffffffff811115620004265762000425620001a7565b5b62000434878288016200035d565b91505092959194509250565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200049357607f821691505b602082108103620004a957620004a86200044b565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620005137fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620004d4565b6200051f8683620004d4565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200056c62000566620005608462000537565b62000541565b62000537565b9050919050565b6000819050919050565b62000588836200054b565b620005a0620005978262000573565b848454620004e1565b825550505050565b600090565b620005b7620005a8565b620005c48184846200057d565b505050565b5b81811015620005ec57620005e0600082620005ad565b600181019050620005ca565b5050565b601f8211156200063b576200060581620004af565b6200061084620004c4565b8101602085101562000620578190505b620006386200062f85620004c4565b830182620005c9565b50505b505050565b600082821c905092915050565b6000620006606000198460080262000640565b1980831691505092915050565b60006200067b83836200064d565b9150826002028217905092915050565b620006968262000440565b67ffffffffffffffff811115620006b257620006b16200022c565b5b620006be82546200047a565b620006cb828285620005f0565b600060209050601f831160018114620007035760008415620006ee578287015190505b620006fa85826200066d565b8655506200076a565b601f1984166200071386620004af565b60005b828110156200073d5784890151825560018201915060208501945060208101905062000716565b868310156200075d578489015162000759601f8916826200064d565b8355505b6001600288020188555050505b505050505050565b600082825260208201905092915050565b7f546f6b656e206164647265737365732063616e6e6f7420626520746865207a6560008201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b6000620007e1602a8362000772565b9150620007ee8262000783565b604082019050919050565b600060208201905081810360008301526200081481620007d2565b9050919050565b6120df806200082b6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80635f64b55b116100975780639c8f9f23116100665780639c8f9f23146102b45780639cd441da146102e5578063a9059cbb14610315578063dd62ed3e1461034557610100565b80635f64b55b1461021857806370a08231146102365780637386479e1461026657806395d89b411461029657610100565b806318160ddd116100d357806318160ddd1461019057806323b872dd146101ae578063313ce567146101de57806343264349146101fc57610100565b806306fdde03146101055780630902f1ac14610123578063095ea7b3146101425780630fc63d1014610172575b600080fd5b61010d610375565b60405161011a91906118aa565b60405180910390f35b61012b610407565b6040516101399291906118e5565b60405180910390f35b61015c6004803603810190610157919061199d565b61054a565b60405161016991906119f8565b60405180910390f35b61017a61056d565b6040516101879190611a22565b60405180910390f35b610198610593565b6040516101a59190611a3d565b60405180910390f35b6101c860048036038101906101c39190611a58565b61059d565b6040516101d591906119f8565b60405180910390f35b6101e66105cc565b6040516101f39190611ac7565b60405180910390f35b61021660048036038101906102119190611ae2565b6105d5565b005b61022061093c565b60405161022d9190611a22565b60405180910390f35b610250600480360381019061024b9190611b35565b610962565b60405161025d9190611a3d565b60405180910390f35b610280600480360381019061027b9190611b62565b6109aa565b60405161028d9190611a3d565b60405180910390f35b61029e610a51565b6040516102ab91906118aa565b60405180910390f35b6102ce60048036038101906102c99190611bb5565b610ae3565b6040516102dc9291906118e5565b60405180910390f35b6102ff60048036038101906102fa9190611be2565b610dac565b60405161030c9190611a3d565b60405180910390f35b61032f600480360381019061032a919061199d565b6110ce565b60405161033c91906119f8565b60405180910390f35b61035f600480360381019061035a9190611c22565b6110f1565b60405161036c9190611a3d565b60405180910390f35b60606003805461038490611c91565b80601f01602080910402602001604051908101604052809291908181526020018280546103b090611c91565b80156103fd5780601f106103d2576101008083540402835291602001916103fd565b820191906000526020600020905b8154815290600101906020018083116103e057829003601f168201915b5050505050905090565b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104659190611a22565b602060405180830381865afa158015610482573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a69190611cd7565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105019190611a22565b602060405180830381865afa15801561051e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105429190611cd7565b915091509091565b600080610555611178565b9050610562818585611180565b600191505092915050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600254905090565b6000806105a8611178565b90506105b5858285611192565b6105c0858585611226565b60019150509392505050565b60006012905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16148061067e5750600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b6106bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b490611d50565b60405180910390fd5b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461073c57600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610760565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff165b9050600080600080610770610407565b8092508193505050600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16036107d8578193508092506107df565b8093508192505b60006107ec8986866109aa565b905086811015610831576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082890611dbc565b60405180910390fd5b8773ffffffffffffffffffffffffffffffffffffffff166323b872dd33308c6040518463ffffffff1660e01b815260040161086e93929190611ddc565b6020604051808303816000875af115801561088d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b19190611e3f565b508573ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016108ed929190611e6c565b6020604051808303816000875af115801561090c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109309190611e3f565b50505050505050505050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080831180156109bb5750600082115b6109fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f190611ee1565b60405180910390fd5b60006103e585610a0a9190611f30565b905060008382610a1a9190611f30565b90506000826103e887610a2d9190611f30565b610a379190611f72565b90508082610a459190611fd5565b93505050509392505050565b606060048054610a6090611c91565b80601f0160208091040260200160405190810160405280929190818152602001828054610a8c90611c91565b8015610ad95780601f10610aae57610100808354040283529160200191610ad9565b820191906000526020600020905b815481529060010190602001808311610abc57829003601f168201915b5050505050905090565b6000806000610af0610593565b905080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610b4e9190611a22565b602060405180830381865afa158015610b6b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8f9190611cd7565b85610b9a9190611f30565b610ba49190611fd5565b925080600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610c029190611a22565b602060405180830381865afa158015610c1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c439190611cd7565b85610c4e9190611f30565b610c589190611fd5565b9150610c64338561131a565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b8152600401610cc1929190611e6c565b6020604051808303816000875af1158015610ce0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d049190611e3f565b50600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610d62929190611e6c565b6020604051808303816000875af1158015610d81573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da59190611e3f565b5050915091565b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600080610e06610407565b8092508193505050600082148015610e1e5750600081145b15610f38578373ffffffffffffffffffffffffffffffffffffffff166323b872dd33308a6040518463ffffffff1660e01b8152600401610e6093929190611ddc565b6020604051808303816000875af1158015610e7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea39190611e3f565b508273ffffffffffffffffffffffffffffffffffffffff166323b872dd3330896040518463ffffffff1660e01b8152600401610ee193929190611ddc565b6020604051808303816000875af1158015610f00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f249190611e3f565b508587610f319190611f72565b94506110ba565b6000828289610f479190611f30565b610f519190611fd5565b905080871015610f96576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8d90612052565b60405180910390fd5b8473ffffffffffffffffffffffffffffffffffffffff166323b872dd33308b6040518463ffffffff1660e01b8152600401610fd393929190611ddc565b6020604051808303816000875af1158015610ff2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110169190611e3f565b508373ffffffffffffffffffffffffffffffffffffffff166323b872dd33308a6040518463ffffffff1660e01b815260040161105493929190611ddc565b6020604051808303816000875af1158015611073573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110979190611e3f565b50826110a1610593565b896110ac9190611f30565b6110b69190611fd5565b9550505b6110c4338661139c565b5050505092915050565b6000806110d9611178565b90506110e6818585611226565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b61118d838383600161141e565b505050565b600061119e84846110f1565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146112205781811015611210578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161120793929190612072565b60405180910390fd5b61121f8484848403600061141e565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036112985760006040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161128f9190611a22565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361130a5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016113019190611a22565b60405180910390fd5b6113158383836115f5565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361138c5760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016113839190611a22565b60405180910390fd5b611398826000836115f5565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361140e5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016114059190611a22565b60405180910390fd5b61141a600083836115f5565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036114905760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016114879190611a22565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036115025760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016114f99190611a22565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080156115ef578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516115e69190611a3d565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361164757806002600082825461163b9190611f72565b9250508190555061171a565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156116d3578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016116ca93929190612072565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361176357806002600082825403925050819055506117b0565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161180d9190611a3d565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611854578082015181840152602081019050611839565b60008484015250505050565b6000601f19601f8301169050919050565b600061187c8261181a565b6118868185611825565b9350611896818560208601611836565b61189f81611860565b840191505092915050565b600060208201905081810360008301526118c48184611871565b905092915050565b6000819050919050565b6118df816118cc565b82525050565b60006040820190506118fa60008301856118d6565b61190760208301846118d6565b9392505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061193e82611913565b9050919050565b61194e81611933565b811461195957600080fd5b50565b60008135905061196b81611945565b92915050565b61197a816118cc565b811461198557600080fd5b50565b60008135905061199781611971565b92915050565b600080604083850312156119b4576119b361190e565b5b60006119c28582860161195c565b92505060206119d385828601611988565b9150509250929050565b60008115159050919050565b6119f2816119dd565b82525050565b6000602082019050611a0d60008301846119e9565b92915050565b611a1c81611933565b82525050565b6000602082019050611a376000830184611a13565b92915050565b6000602082019050611a5260008301846118d6565b92915050565b600080600060608486031215611a7157611a7061190e565b5b6000611a7f8682870161195c565b9350506020611a908682870161195c565b9250506040611aa186828701611988565b9150509250925092565b600060ff82169050919050565b611ac181611aab565b82525050565b6000602082019050611adc6000830184611ab8565b92915050565b600080600060608486031215611afb57611afa61190e565b5b6000611b0986828701611988565b9350506020611b1a8682870161195c565b9250506040611b2b86828701611988565b9150509250925092565b600060208284031215611b4b57611b4a61190e565b5b6000611b598482850161195c565b91505092915050565b600080600060608486031215611b7b57611b7a61190e565b5b6000611b8986828701611988565b9350506020611b9a86828701611988565b9250506040611bab86828701611988565b9150509250925092565b600060208284031215611bcb57611bca61190e565b5b6000611bd984828501611988565b91505092915050565b60008060408385031215611bf957611bf861190e565b5b6000611c0785828601611988565b9250506020611c1885828601611988565b9150509250929050565b60008060408385031215611c3957611c3861190e565b5b6000611c478582860161195c565b9250506020611c588582860161195c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611ca957607f821691505b602082108103611cbc57611cbb611c62565b5b50919050565b600081519050611cd181611971565b92915050565b600060208284031215611ced57611cec61190e565b5b6000611cfb84828501611cc2565b91505092915050565b7f496e76616c696420696e70757420746f6b656e00000000000000000000000000600082015250565b6000611d3a601383611825565b9150611d4582611d04565b602082019050919050565b60006020820190508181036000830152611d6981611d2d565b9050919050565b7f496e73756666696369656e74206f757470757420616d6f756e74000000000000600082015250565b6000611da6601a83611825565b9150611db182611d70565b602082019050919050565b60006020820190508181036000830152611dd581611d99565b9050919050565b6000606082019050611df16000830186611a13565b611dfe6020830185611a13565b611e0b60408301846118d6565b949350505050565b611e1c816119dd565b8114611e2757600080fd5b50565b600081519050611e3981611e13565b92915050565b600060208284031215611e5557611e5461190e565b5b6000611e6384828501611e2a565b91505092915050565b6000604082019050611e816000830185611a13565b611e8e60208301846118d6565b9392505050565b7f496e76616c696420726573657276657300000000000000000000000000000000600082015250565b6000611ecb601083611825565b9150611ed682611e95565b602082019050919050565b60006020820190508181036000830152611efa81611ebe565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611f3b826118cc565b9150611f46836118cc565b9250828202611f54816118cc565b91508282048414831517611f6b57611f6a611f01565b5b5092915050565b6000611f7d826118cc565b9150611f88836118cc565b9250828201905080821115611fa057611f9f611f01565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611fe0826118cc565b9150611feb836118cc565b925082611ffb57611ffa611fa6565b5b828204905092915050565b7f496e73756666696369656e74204220746f6b656e20616d6f756e740000000000600082015250565b600061203c601b83611825565b915061204782612006565b602082019050919050565b6000602082019050818103600083015261206b8161202f565b9050919050565b60006060820190506120876000830186611a13565b61209460208301856118d6565b6120a160408301846118d6565b94935050505056fea26469706673582212201454833c47659a87700a7929186cc6b44b504581fa4607db2f7e2b1f00a3ce6864736f6c63430008140033";

type TokenToTokenExchangeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenToTokenExchangeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenToTokenExchange__factory extends ContractFactory {
  constructor(...args: TokenToTokenExchangeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _tokenA: AddressLike,
    _tokenB: AddressLike,
    _name: string,
    _symbol: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _tokenA,
      _tokenB,
      _name,
      _symbol,
      overrides || {}
    );
  }
  override deploy(
    _tokenA: AddressLike,
    _tokenB: AddressLike,
    _name: string,
    _symbol: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _tokenA,
      _tokenB,
      _name,
      _symbol,
      overrides || {}
    ) as Promise<
      TokenToTokenExchange & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): TokenToTokenExchange__factory {
    return super.connect(runner) as TokenToTokenExchange__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenToTokenExchangeInterface {
    return new Interface(_abi) as TokenToTokenExchangeInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TokenToTokenExchange {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as TokenToTokenExchange;
  }
}
